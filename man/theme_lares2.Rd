% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme_lares2.R
\name{theme_lares2}
\alias{theme_lares2}
\title{lares Theme for ggplot2}
\usage{
theme_lares2(base_family = "Arial Narrow", base_size = 11.5,
  main_colour = "darkorange3", plot_title_family = base_family,
  plot_title_size = 18, plot_title_face = "bold",
  plot_title_margin = 10, subtitle_family = base_family,
  subtitle_size = 12, subtitle_face = "plain", subtitle_margin = 8,
  strip_text_family = base_family, strip_text_size = 12,
  strip_text_face = "plain", caption_family = base_family,
  caption_size = 10, caption_face = "italic", caption_margin = 10,
  axis_text_size = base_size * 0.85,
  axis_title_family = subtitle_family, axis_title_size = 9,
  axis_title_face = "plain", axis_title_just = "left",
  plot_margin = margin(15, 15, 15, 15), grid_col = "#cccccc",
  grid = TRUE, axis_col = "#cccccc", axis = FALSE, ticks = FALSE)
}
\arguments{
\item{base_family, base_size}{Character and numeric. Base font family and size}

\item{main_colour}{Character. Main colour for your theme; default to \code{#darkorange3}}

\item{plot_title_family, plot_title_face, plot_title_size, plot_title_margin}{Character and numeric.
Plot title family, face, size and margi}

\item{subtitle_family, subtitle_face, subtitle_size}{Character and numeric. Plot subtitle
family, face and size}

\item{subtitle_margin}{Numeric Plot subtitle margin bottom}

\item{strip_text_family, strip_text_face, strip_text_size}{Character and numeric. Facet
label font family, face and size}

\item{caption_family, caption_face, caption_size, caption_margin}{Character and numeric.
Plot caption family, face, size and margin}

\item{axis_text_size}{Numeric. Font size of axis text}

\item{axis_title_family, axis_title_face, axis_title_size}{Character and numeric.
Axis title font family, face and size}

\item{axis_title_just}{Character. Axis title font justification, one of \code{[blmcrt]}}

\item{plot_margin}{Margin Vector. Plot margin (specify with \code{\link[ggplot2:margin]{ggplot2::margin()}})}

\item{grid_col, axis_col}{Character. Grid & axis colors; both default to \code{#cccccc}}

\item{grid}{Boolean. Panel grid (\code{TRUE}, \code{FALSE}, or a combination of \code{X}, \code{x}, \code{Y}, \code{y})}

\item{axis}{Boolean. Add x or y axes? \code{TRUE}, \code{FALSE}, "\code{xy}"}

\item{ticks}{Boolean. Ticks if \code{TRUE} add ticks}
}
\description{
Based on hrbrthemes' theme_ipsum: A precise & pristine \link{ggplot2} theme
with opinionated defaults and an emphasis on typography.
}
\section{Why Arial Narrow?}{

First and foremost, Arial Narrow is generally installed by default or readily
available on any modern system, so it's "free"-ish; plus, it is a condensed font
with solid default kerning pairs and geometric numbers.
}

\section{Building upon \code{theme_ipsum}}{

The function is setup in such a way that you can customize your own one by just
wrapping the call and changing the parameters. See source for examples.
}

\section{Gotchas}{

There are distinctions between font names and various devices. Names that work
for display graphics devices and bitmap ones such as \code{png} may not work well
for PostScript or PDF ones. You may need two versions of a font-based
theme function for them to work in a particular situation. This situation
usually only arises when using a newer font with many weights but somewhat
irregular internal font name patterns.

There is an option \code{hrbrthemes.loadfonts} which -- if set to \code{TRUE} -- will
call \code{extrafont::loadfonts()} to register non-core fonts with R PDF & PostScript
devices. If you are running under Windows, the package calls the same function
to register non-core fonts with the Windows graphics device.
}

\examples{
\dontrun{
library(ggplot2)
library(dplyr)

# seminal scatterplot
ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  labs(x="Fuel effiiency (mpg)", y="Weight (tons)",
       title="Seminal ggplot2 scatterplot example",
       subtitle="A plot that is only useful for demonstration purposes",
       caption="Brought to you by the letter 'g'") +
  theme_ipsum()

# seminal bar chart

update_geom_font_defaults()

count(mpg, class) \%>\%
  ggplot(aes(class, n)) +
  geom_col() +
  geom_text(aes(label=n), nudge_y=3) +
  labs(x="Fuel efficiency (mpg)", y="Weight (tons)",
       title="Seminal ggplot2 bar chart example",
       subtitle="A plot that is only useful for demonstration purposes",
       caption="Brought to you by the letter 'g'") +
  theme_ipsum(grid="Y") +
  theme(axis.text.y=element_blank())
}
}
